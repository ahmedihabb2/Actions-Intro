# Read about GitHub Contexts https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/contexts
# Read about event triggers https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
# Market place https://github.com/marketplace?type=actions
name: Automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  issues:
     type: [opened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      randomNum: ${{steps.Rand.outputs.randomNum}}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo $PR_NUMBER
          echo test, and deploy your project.
        # Export a random number to be used later
      - name: Generate Random number
        id: Rand
        run: |
          randomNum=$RANDOM
          echo "Random number is $randomNum"
          echo "randomNum=$randomNum" >> $GITHUB_OUTPUT

  comment: 
    runs-on: ubuntu-latest
    needs: [build]
    env:
      randomNum: ${{needs.build.outputs.randomNum}}
    steps: 
      - name: create comment 
        if: github.event_name == 'issues'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$OWNER/$REPO/issues/$ISSUE_NUMBER/comments \
              -d "{\"body\":\"Thank you for opening this issue. We will look into it as soon as possible $randomNum.\"}"



        
